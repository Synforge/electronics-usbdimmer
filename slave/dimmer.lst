   1               		.file	"dimmer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               	.global	initIO
  11               	initIO:
  12               	.LFB7:
  13               		.file 1 "dimmer.c"
   1:dimmer.c      **** #include <dimmer.h>
   2:dimmer.c      **** 
   3:dimmer.c      **** #include <avr/io.h>
   4:dimmer.c      **** #include <avr/interrupt.h>
   5:dimmer.c      **** #include <avr/pgmspace.h>
   6:dimmer.c      **** #include <avr/eeprom.h>
   7:dimmer.c      **** #include <avr/wdt.h>
   8:dimmer.c      **** 
   9:dimmer.c      **** #include <util/delay.h>
  10:dimmer.c      **** 
  11:dimmer.c      **** #define TRUE 			1
  12:dimmer.c      **** #define FALSE 			0
  13:dimmer.c      **** 
  14:dimmer.c      **** #define MAX_SIZE 		2048
  15:dimmer.c      **** 
  16:dimmer.c      **** #define DEBUG_DDR 		DDRC
  17:dimmer.c      **** #define DEBUG_PORT		PORTC
  18:dimmer.c      **** #define DEBUG_LED 		PC5
  19:dimmer.c      **** 
  20:dimmer.c      **** #define CMD_SET 		0x01
  21:dimmer.c      **** #define CMD_INC                 0x02
  22:dimmer.c      **** #define CMD_DEC                 0x03
  23:dimmer.c      **** 
  24:dimmer.c      **** #define METHOD_SWITCH 	0x00
  25:dimmer.c      **** #define METHOD_RAMP 	0x01
  26:dimmer.c      **** 
  27:dimmer.c      **** #define DIMMER_COUNT	2
  28:dimmer.c      **** 
  29:dimmer.c      **** uint8_t dimmerMasks[] = {(1<<PD0),(1<<PD1),(1<<PD3), (1<<PD4), (1<<PD5), (1<<PD6), (1<<PD7), (1<<PB
  30:dimmer.c      **** volatile uint8_t dimmerRequests[] = {0,0,0,0,0,0,0,0};
  31:dimmer.c      **** volatile uint8_t dimmerLevels[] = {0,0,0,0,0,0,0,0};
  32:dimmer.c      **** 
  33:dimmer.c      **** 
  34:dimmer.c      **** void initIO (void)
  35:dimmer.c      **** {
  14               		.loc 1 35 0
  15               	/* prologue: function */
  16               	/* frame size = 0 */
  17               	/* stack size = 0 */
  18               	.L__stack_usage = 0
  36:dimmer.c      **** 	//Set the debug LED as output
  37:dimmer.c      **** 	DEBUG_DDR = (1<<DEBUG_LED);
  19               		.loc 1 37 0
  20 0000 80E2      		ldi r24,lo8(32)
  21 0002 87B9      		out 0x7,r24
  38:dimmer.c      **** 
  39:dimmer.c      **** 	//INT0 - ZCD
  40:dimmer.c      **** 	EICRA |= (1<<ISC01) | (0<<ISC00);
  22               		.loc 1 40 0
  23 0004 E9E6      		ldi r30,lo8(105)
  24 0006 F0E0      		ldi r31,0
  25 0008 8081      		ld r24,Z
  26 000a 8260      		ori r24,lo8(2)
  27 000c 8083      		st Z,r24
  41:dimmer.c      **** 	EIMSK |= (1<<INT0);
  28               		.loc 1 41 0
  29 000e E89A      		sbi 0x1d,0
  42:dimmer.c      **** 
  43:dimmer.c      **** 	//Dimming Timer
  44:dimmer.c      **** 	TCCR0A = 	(1 << WGM01);
  30               		.loc 1 44 0
  31 0010 82E0      		ldi r24,lo8(2)
  32 0012 84BD      		out 0x24,r24
  45:dimmer.c      **** 	TCCR0B = 	((1 << CS02) | (1 << CS00));		// CTC Mode - Prescaler 1024
  33               		.loc 1 45 0
  34 0014 95E0      		ldi r25,lo8(5)
  35 0016 95BD      		out 0x25,r25
  46:dimmer.c      **** 	OCR0A = 	156;								// ~10ms
  36               		.loc 1 46 0
  37 0018 9CE9      		ldi r25,lo8(-100)
  38 001a 97BD      		out 0x27,r25
  47:dimmer.c      **** 	TIMSK0 = 	(1 << OCIE0A);
  39               		.loc 1 47 0
  40 001c 8093 6E00 		sts 110,r24
  48:dimmer.c      **** 
  49:dimmer.c      **** 	//Set up SPI
  50:dimmer.c      **** 	DDRB &= ~((1<<2)|(1<<3)|(1<<5));   // SCK, MOSI and SS as inputs
  41               		.loc 1 50 0
  42 0020 84B1      		in r24,0x4
  43 0022 837D      		andi r24,lo8(-45)
  44 0024 84B9      		out 0x4,r24
  51:dimmer.c      ****     DDRB |= (1<<4);                    // MISO as output
  45               		.loc 1 51 0
  46 0026 249A      		sbi 0x4,4
  52:dimmer.c      **** 
  53:dimmer.c      ****     SPCR &= ~(1<<MSTR);                // Set as slave 
  47               		.loc 1 53 0
  48 0028 8CB5      		in r24,0x2c
  49 002a 8F7E      		andi r24,lo8(-17)
  50 002c 8CBD      		out 0x2c,r24
  54:dimmer.c      ****     SPCR |= (1<<SPR0)|(1<<SPR1);       // divide clock by 128
  51               		.loc 1 54 0
  52 002e 8CB5      		in r24,0x2c
  53 0030 8360      		ori r24,lo8(3)
  54 0032 8CBD      		out 0x2c,r24
  55:dimmer.c      ****     SPCR |= (1<<SPE);                  // Enable SPI
  55               		.loc 1 55 0
  56 0034 8CB5      		in r24,0x2c
  57 0036 8064      		ori r24,lo8(64)
  58 0038 8CBD      		out 0x2c,r24
  56:dimmer.c      **** 
  57:dimmer.c      **** 	sei();
  59               		.loc 1 57 0
  60               	/* #APP */
  61               	 ;  57 "dimmer.c" 1
  62 003a 7894      		sei
  63               	 ;  0 "" 2
  64               	/* #NOAPP */
  65 003c 0895      		ret
  66               	.LFE7:
  68               	.global	initDimmers
  70               	initDimmers:
  71               	.LFB8:
  58:dimmer.c      **** }
  59:dimmer.c      **** 
  60:dimmer.c      **** void initDimmers(void) {
  72               		.loc 1 60 0
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 0 */
  76               	.L__stack_usage = 0
  61:dimmer.c      **** 	//Set up the Data Direction Register
  62:dimmer.c      **** 	DDRD |= (1<<PD0) | (1<<PD1) | (1<<PD3) | (1<<PD4) | (1<<PD5) | (1<<PD6) | (1<<PD7);
  77               		.loc 1 62 0
  78 003e 8AB1      		in r24,0xa
  79 0040 8B6F      		ori r24,lo8(-5)
  80 0042 8AB9      		out 0xa,r24
  63:dimmer.c      **** 	//Set the triacs off.
  64:dimmer.c      **** 	PORTD &= ~((1<<PD0) | (1<<PD1) | (1<<PD3) | (1<<PD4) | (1<<PD5) | (1<<PD6) | (1<<PD7));
  81               		.loc 1 64 0
  82 0044 8BB1      		in r24,0xb
  83 0046 8470      		andi r24,lo8(4)
  84 0048 8BB9      		out 0xb,r24
  65:dimmer.c      **** 	//Set PB0 as an output (channel 8)
  66:dimmer.c      **** 	DDRB |= (1<<PB0);
  85               		.loc 1 66 0
  86 004a 209A      		sbi 0x4,0
  87 004c 0895      		ret
  88               	.LFE8:
  90               	.global	spi_read
  92               	spi_read:
  93               	.LFB9:
  67:dimmer.c      **** }
  68:dimmer.c      **** 
  69:dimmer.c      **** unsigned char *spi_read(uint8_t bytes, unsigned char c[]) 
  70:dimmer.c      **** {
  94               		.loc 1 70 0
  95               	.LVL0:
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 0 */
  99               	.L__stack_usage = 0
 100 004e 972F      		mov r25,r23
 101               	.LVL1:
 102               	.LBB13:
  71:dimmer.c      **** 	for(uint8_t i = 0; i < bytes; i++) {
 103               		.loc 1 71 0
 104 0050 E62F      		mov r30,r22
 105 0052 F72F      		mov r31,r23
 106 0054 00C0      		rjmp .L4
 107               	.LVL2:
 108               	.L6:
  72:dimmer.c      **** 		while(!(SPSR & (1<<SPIF)));
 109               		.loc 1 72 0
 110 0056 0DB4      		in __tmp_reg__,0x2d
 111 0058 07FE      		sbrs __tmp_reg__,7
 112 005a 00C0      		rjmp .L6
  73:dimmer.c      **** 		c[i] = SPDR;
 113               		.loc 1 73 0
 114 005c 2EB5      		in r18,0x2e
 115 005e 2193      		st Z+,r18
 116               	.L4:
  71:dimmer.c      **** 	for(uint8_t i = 0; i < bytes; i++) {
 117               		.loc 1 71 0 discriminator 1
 118 0060 2E2F      		mov r18,r30
 119 0062 261B      		sub r18,r22
 120 0064 2817      		cp r18,r24
 121 0066 00F0      		brlo .L6
 122               	.LBE13:
  74:dimmer.c      **** 	}
  75:dimmer.c      **** 
  76:dimmer.c      **** 	return c;
  77:dimmer.c      **** } 
 123               		.loc 1 77 0
 124 0068 862F      		mov r24,r22
 125               	.LVL3:
 126 006a 0895      		ret
 127               	.LFE9:
 129               		.section	.text.startup,"ax",@progbits
 130               	.global	main
 132               	main:
 133               	.LFB10:
  78:dimmer.c      **** 
  79:dimmer.c      **** int main (void)
  80:dimmer.c      **** {
 134               		.loc 1 80 0
 135 0000 CF93      		push r28
 136               	.LCFI0:
 137 0002 DF93      		push r29
 138               	.LCFI1:
 139 0004 00D0      		rcall .
 140 0006 1F92      		push __zero_reg__
 141               	.LCFI2:
 142 0008 CDB7      		in r28,__SP_L__
 143 000a DEB7      		in r29,__SP_H__
 144               	.LCFI3:
 145               	/* prologue: function */
 146               	/* frame size = 3 */
 147               	/* stack size = 5 */
 148               	.L__stack_usage = 5
  81:dimmer.c      **** 	initIO(); //Setup IO pins and defaults
 149               		.loc 1 81 0
 150 000c 0E94 0000 		call initIO
 151               	.LVL4:
  82:dimmer.c      **** 	initDimmers(); //Set up the dimmers.
 152               		.loc 1 82 0
 153 0010 0E94 0000 		call initDimmers
 154               	.LVL5:
 155               	.LBB14:
 156               	.LBB15:
  83:dimmer.c      **** 
  84:dimmer.c      **** 	while(1) {
  85:dimmer.c      **** 
  86:dimmer.c      **** 		while(!(SPSR & (1<<SPIF)));
  87:dimmer.c      **** 
  88:dimmer.c      ****                 uint8_t command = SPDR;
  89:dimmer.c      **** 
  90:dimmer.c      ****         	if(command == CMD_SET) {
  91:dimmer.c      ****         		//Read the next 3 bytes
  92:dimmer.c      ****         		unsigned char c[3];
  93:dimmer.c      ****         		spi_read(3, c);
  94:dimmer.c      **** 
  95:dimmer.c      ****         		if(c[0] == METHOD_SWITCH) {
  96:dimmer.c      ****         			switchToLevel((uint8_t)c[1], (uint8_t)c[2]);
  97:dimmer.c      ****          		} else {
  98:dimmer.c      **** 				rampToLevel((uint8_t)c[1], (uint8_t)c[2]);
  99:dimmer.c      ****          		}
 100:dimmer.c      **** 
 101:dimmer.c      ****         	} else 
 102:dimmer.c      ****                 if(command == CMD_INC || command == CMD_DEC) {
 103:dimmer.c      **** 		    if(command == CMD_INC) {
 104:dimmer.c      **** 			DEBUG_PORT ^= (1<<DEBUG_LED);
 157               		.loc 1 104 0
 158 0014 10E2      		ldi r17,lo8(32)
 159               	.L25:
 160               	.LBE15:
  86:dimmer.c      **** 		while(!(SPSR & (1<<SPIF)));
 161               		.loc 1 86 0 discriminator 1
 162 0016 0DB4      		in __tmp_reg__,0x2d
 163 0018 07FE      		sbrs __tmp_reg__,7
 164 001a 00C0      		rjmp .L25
  88:dimmer.c      ****                 uint8_t command = SPDR;
 165               		.loc 1 88 0
 166 001c 0EB5      		in r16,0x2e
 167               	.LVL6:
  90:dimmer.c      ****         	if(command == CMD_SET) {
 168               		.loc 1 90 0
 169 001e 0130      		cpi r16,lo8(1)
 170 0020 01F4      		brne .L11
 171               	.LBB20:
  93:dimmer.c      ****         		spi_read(3, c);
 172               		.loc 1 93 0
 173 0022 BE01      		movw r22,r28
 174 0024 6F5F      		subi r22,-1
 175 0026 7F4F      		sbci r23,-1
 176 0028 83E0      		ldi r24,lo8(3)
 177 002a 0E94 0000 		call spi_read
 178               	.LVL7:
  95:dimmer.c      ****         		if(c[0] == METHOD_SWITCH) {
 179               		.loc 1 95 0
 180 002e 9981      		ldd r25,Y+1
 181 0030 8B81      		ldd r24,Y+3
 182 0032 EA81      		ldd r30,Y+2
 183               	.LBB21:
 184               	.LBB22:
 105:dimmer.c      **** 		    }
 106:dimmer.c      **** 
 107:dimmer.c      ****                     //Read the next 3 bytes
 108:dimmer.c      **** 		    unsigned char c[3];
 109:dimmer.c      ****                     spi_read(3, c);
 110:dimmer.c      **** 
 111:dimmer.c      ****                     int16_t cur = dimmerLevels[c[1]];
 112:dimmer.c      **** 
 113:dimmer.c      ****                     if(command == CMD_INC) {
 114:dimmer.c      ****                         cur += c[2];
 115:dimmer.c      ****                     } else {
 116:dimmer.c      ****                         cur -= c[2];
 117:dimmer.c      ****                     }
 118:dimmer.c      **** 
 119:dimmer.c      ****                     if(cur > 255) {
 120:dimmer.c      ****                         cur = 255;
 121:dimmer.c      ****                     }
 122:dimmer.c      **** 
 123:dimmer.c      **** 
 124:dimmer.c      ****                     if(cur < 0) {
 125:dimmer.c      ****                         cur = 0;
 126:dimmer.c      ****                     }
 127:dimmer.c      **** 
 128:dimmer.c      **** 
 129:dimmer.c      ****                     if(c[0] == METHOD_SWITCH) {
 130:dimmer.c      ****                         switchToLevel((uint8_t)c[1], cur);
 131:dimmer.c      ****                     } else {
 132:dimmer.c      **** 			rampToLevel((uint8_t)c[1], cur);
 133:dimmer.c      ****                     }
 134:dimmer.c      ****                 }
 135:dimmer.c      **** 
 136:dimmer.c      **** 	}
 137:dimmer.c      **** 
 138:dimmer.c      **** 	return(0);
 139:dimmer.c      **** }
 140:dimmer.c      **** 
 141:dimmer.c      **** void rampToLevel(uint8_t index, uint8_t level) {
 142:dimmer.c      **** 	if(level > 255)
 143:dimmer.c      **** 		level = 255;
 144:dimmer.c      **** 	
 145:dimmer.c      **** 	if(level < 0 ) 
 146:dimmer.c      **** 		level = 0;
 147:dimmer.c      **** 	
 148:dimmer.c      **** 	dimmerRequests[index] = level;
 149:dimmer.c      **** }
 150:dimmer.c      **** 
 151:dimmer.c      **** void switchToLevel(uint8_t index, uint8_t level) {
 152:dimmer.c      **** 	if(level > 255)
 153:dimmer.c      **** 		level = 255;
 154:dimmer.c      **** 	
 155:dimmer.c      **** 	if(level < 0 ) 
 156:dimmer.c      **** 		level = 0;
 157:dimmer.c      **** 
 158:dimmer.c      **** 	dimmerLevels[index] = level;
 185               		.loc 1 158 0
 186 0034 F0E0      		ldi r31,0
 187               	.LBE22:
 188               	.LBE21:
  95:dimmer.c      ****         		if(c[0] == METHOD_SWITCH) {
 189               		.loc 1 95 0
 190 0036 9111      		cpse r25,__zero_reg__
 191 0038 00C0      		rjmp .L26
 192               	.LVL8:
 193               	.LBB24:
 194               	.LBB23:
 195               		.loc 1 158 0
 196 003a DF01      		movw r26,r30
 197 003c A050      		subi r26,lo8(-(dimmerLevels))
 198 003e B040      		sbci r27,hi8(-(dimmerLevels))
 199 0040 8C93      		st X,r24
 200               	.LVL9:
 201               	.L26:
 202               	.LBE23:
 203               	.LBE24:
 204               	.LBB25:
 205               	.LBB26:
 148:dimmer.c      **** 	dimmerRequests[index] = level;
 206               		.loc 1 148 0
 207 0042 E050      		subi r30,lo8(-(dimmerRequests))
 208 0044 F040      		sbci r31,hi8(-(dimmerRequests))
 209 0046 00C0      		rjmp .L20
 210               	.L11:
 211               	.LBE26:
 212               	.LBE25:
 213               	.LBE20:
 102:dimmer.c      ****                 if(command == CMD_INC || command == CMD_DEC) {
 214               		.loc 1 102 0
 215 0048 802F      		mov r24,r16
 216 004a 8250      		subi r24,lo8(-(-2))
 217 004c 8230      		cpi r24,lo8(2)
 218 004e 00F4      		brsh .L25
 219               	.LBB27:
 103:dimmer.c      **** 		    if(command == CMD_INC) {
 220               		.loc 1 103 0
 221 0050 0230      		cpi r16,lo8(2)
 222 0052 01F4      		brne .L15
 104:dimmer.c      **** 			DEBUG_PORT ^= (1<<DEBUG_LED);
 223               		.loc 1 104 0
 224 0054 88B1      		in r24,0x8
 225 0056 8127      		eor r24,r17
 226 0058 88B9      		out 0x8,r24
 227               	.L15:
 109:dimmer.c      ****                     spi_read(3, c);
 228               		.loc 1 109 0
 229 005a BE01      		movw r22,r28
 230 005c 6F5F      		subi r22,-1
 231 005e 7F4F      		sbci r23,-1
 232 0060 83E0      		ldi r24,lo8(3)
 233 0062 0E94 0000 		call spi_read
 234               	.LVL10:
 111:dimmer.c      ****                     int16_t cur = dimmerLevels[c[1]];
 235               		.loc 1 111 0
 236 0066 2A81      		ldd r18,Y+2
 237 0068 30E0      		ldi r19,0
 238 006a F901      		movw r30,r18
 239 006c E050      		subi r30,lo8(-(dimmerLevels))
 240 006e F040      		sbci r31,hi8(-(dimmerLevels))
 241 0070 8081      		ld r24,Z
 242 0072 90E0      		ldi r25,0
 243               	.LVL11:
 244 0074 4B81      		ldd r20,Y+3
 113:dimmer.c      ****                     if(command == CMD_INC) {
 245               		.loc 1 113 0
 246 0076 0230      		cpi r16,lo8(2)
 247 0078 01F4      		brne .L16
 114:dimmer.c      ****                         cur += c[2];
 248               		.loc 1 114 0
 249 007a 840F      		add r24,r20
 250 007c 911D      		adc r25,__zero_reg__
 251               	.LVL12:
 252 007e 8F3F      		cpi r24,-1
 253 0080 9105      		cpc r25,__zero_reg__
 254 0082 01F0      		breq .L19
 255 0084 04F0      		brlt .L19
 256 0086 8FEF      		ldi r24,lo8(-1)
 257 0088 90E0      		ldi r25,0
 258 008a 00C0      		rjmp .L19
 259               	.LVL13:
 260               	.L16:
 116:dimmer.c      ****                         cur -= c[2];
 261               		.loc 1 116 0
 262 008c 841B      		sub r24,r20
 263 008e 9109      		sbc r25,__zero_reg__
 264               	.LVL14:
 124:dimmer.c      ****                     if(cur < 0) {
 265               		.loc 1 124 0
 266 0090 97FF      		sbrs r25,7
 267 0092 00C0      		rjmp .L19
 125:dimmer.c      ****                         cur = 0;
 268               		.loc 1 125 0
 269 0094 80E0      		ldi r24,0
 270 0096 90E0      		ldi r25,0
 271               	.LVL15:
 272               	.L19:
 129:dimmer.c      ****                     if(c[0] == METHOD_SWITCH) {
 273               		.loc 1 129 0
 274 0098 4981      		ldd r20,Y+1
 275 009a F901      		movw r30,r18
 276 009c E050      		subi r30,lo8(-(dimmerRequests))
 277 009e F040      		sbci r31,hi8(-(dimmerRequests))
 278 00a0 4111      		cpse r20,__zero_reg__
 279 00a2 00C0      		rjmp .L20
 280               	.LVL16:
 281               	.LBB16:
 282               	.LBB17:
 283               		.loc 1 158 0
 284 00a4 D901      		movw r26,r18
 285 00a6 A050      		subi r26,lo8(-(dimmerLevels))
 286 00a8 B040      		sbci r27,hi8(-(dimmerLevels))
 287 00aa 8C93      		st X,r24
 288               	.LVL17:
 289               	.L20:
 290               	.LBE17:
 291               	.LBE16:
 292               	.LBB18:
 293               	.LBB19:
 148:dimmer.c      **** 	dimmerRequests[index] = level;
 294               		.loc 1 148 0
 295 00ac 8083      		st Z,r24
 296 00ae 00C0      		rjmp .L25
 297               	.LBE19:
 298               	.LBE18:
 299               	.LBE27:
 300               	.LBE14:
 301               	.LFE10:
 303               		.text
 304               	.global	rampToLevel
 306               	rampToLevel:
 307               	.LFB11:
 141:dimmer.c      **** void rampToLevel(uint8_t index, uint8_t level) {
 308               		.loc 1 141 0
 309               	.LVL18:
 310               	/* prologue: function */
 311               	/* frame size = 0 */
 312               	/* stack size = 0 */
 313               	.L__stack_usage = 0
 148:dimmer.c      **** 	dimmerRequests[index] = level;
 314               		.loc 1 148 0
 315 006c E82F      		mov r30,r24
 316 006e F0E0      		ldi r31,0
 317 0070 E050      		subi r30,lo8(-(dimmerRequests))
 318 0072 F040      		sbci r31,hi8(-(dimmerRequests))
 319 0074 6083      		st Z,r22
 320 0076 0895      		ret
 321               	.LFE11:
 323               	.global	switchToLevel
 325               	switchToLevel:
 326               	.LFB12:
 151:dimmer.c      **** void switchToLevel(uint8_t index, uint8_t level) {
 327               		.loc 1 151 0
 328               	.LVL19:
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 333               		.loc 1 158 0
 334 0078 90E0      		ldi r25,0
 335 007a FC01      		movw r30,r24
 336 007c E050      		subi r30,lo8(-(dimmerLevels))
 337 007e F040      		sbci r31,hi8(-(dimmerLevels))
 338 0080 6083      		st Z,r22
 159:dimmer.c      **** 	dimmerRequests[index] = level;
 339               		.loc 1 159 0
 340 0082 FC01      		movw r30,r24
 341 0084 E050      		subi r30,lo8(-(dimmerRequests))
 342 0086 F040      		sbci r31,hi8(-(dimmerRequests))
 343 0088 6083      		st Z,r22
 344 008a 0895      		ret
 345               	.LFE12:
 347               	.global	debugLed
 349               	debugLed:
 350               	.LFB13:
 160:dimmer.c      **** }
 161:dimmer.c      **** 
 162:dimmer.c      **** void debugLed(uint8_t state) {
 351               		.loc 1 162 0
 352               	.LVL20:
 353               	/* prologue: function */
 354               	/* frame size = 0 */
 355               	/* stack size = 0 */
 356               	.L__stack_usage = 0
 163:dimmer.c      **** 	DEBUG_PORT = (state<<DEBUG_LED);
 357               		.loc 1 163 0
 358 008c 8295      		swap r24
 359               	.LVL21:
 360 008e 880F      		lsl r24
 361 0090 807E      		andi r24,lo8(-32)
 362 0092 88B9      		out 0x8,r24
 363 0094 0895      		ret
 364               	.LFE13:
 366               	.global	__vector_1
 368               	__vector_1:
 369               	.LFB14:
 164:dimmer.c      **** }
 165:dimmer.c      **** 
 166:dimmer.c      **** volatile uint16_t count;
 167:dimmer.c      **** //Zero Cross Detection.
 168:dimmer.c      **** ISR(INT0_vect) {
 370               		.loc 1 168 0
 371 0096 1F92      		push r1
 372               	.LCFI4:
 373 0098 0F92      		push r0
 374               	.LCFI5:
 375 009a 0FB6      		in r0,__SREG__
 376 009c 0F92      		push r0
 377 009e 1124      		clr __zero_reg__
 378 00a0 8F93      		push r24
 379               	.LCFI6:
 380 00a2 9F93      		push r25
 381               	.LCFI7:
 382 00a4 EF93      		push r30
 383               	.LCFI8:
 384 00a6 FF93      		push r31
 385               	.LCFI9:
 386               	/* prologue: Signal */
 387               	/* frame size = 0 */
 388               	/* stack size = 7 */
 389               	.L__stack_usage = 7
 169:dimmer.c      **** 	count = 256;
 390               		.loc 1 169 0
 391 00a8 80E0      		ldi r24,0
 392 00aa 91E0      		ldi r25,lo8(1)
 393 00ac 9093 0000 		sts count+1,r25
 394 00b0 8093 0000 		sts count,r24
 170:dimmer.c      **** 
 171:dimmer.c      **** 	TCCR1B |= 	((1 << CS10) | (1 << WGM12));
 395               		.loc 1 171 0
 396 00b4 E1E8      		ldi r30,lo8(-127)
 397 00b6 F0E0      		ldi r31,0
 398 00b8 8081      		ld r24,Z
 399 00ba 8960      		ori r24,lo8(9)
 400 00bc 8083      		st Z,r24
 172:dimmer.c      **** 	OCR1A = 	400;
 401               		.loc 1 172 0
 402 00be 80E9      		ldi r24,lo8(-112)
 403 00c0 91E0      		ldi r25,lo8(1)
 404 00c2 9093 8900 		sts 136+1,r25
 405 00c6 8093 8800 		sts 136,r24
 173:dimmer.c      **** 	TIMSK1 |= 	(1 << OCIE1A);	
 406               		.loc 1 173 0
 407 00ca EFE6      		ldi r30,lo8(111)
 408 00cc F0E0      		ldi r31,0
 409 00ce 8081      		ld r24,Z
 410 00d0 8260      		ori r24,lo8(2)
 411 00d2 8083      		st Z,r24
 412               	/* epilogue start */
 174:dimmer.c      **** }
 413               		.loc 1 174 0
 414 00d4 FF91      		pop r31
 415 00d6 EF91      		pop r30
 416 00d8 9F91      		pop r25
 417 00da 8F91      		pop r24
 418 00dc 0F90      		pop r0
 419 00de 0FBE      		out __SREG__,r0
 420 00e0 0F90      		pop r0
 421 00e2 1F90      		pop r1
 422 00e4 1895      		reti
 423               	.LFE14:
 425               	.global	__vector_11
 427               	__vector_11:
 428               	.LFB15:
 175:dimmer.c      **** 
 176:dimmer.c      **** //Zero Cross Timer Interrupt.
 177:dimmer.c      **** ISR(TIMER1_COMPA_vect) {
 429               		.loc 1 177 0
 430 00e6 1F92      		push r1
 431               	.LCFI10:
 432 00e8 0F92      		push r0
 433               	.LCFI11:
 434 00ea 0FB6      		in r0,__SREG__
 435 00ec 0F92      		push r0
 436 00ee 1124      		clr __zero_reg__
 437 00f0 2F93      		push r18
 438               	.LCFI12:
 439 00f2 3F93      		push r19
 440               	.LCFI13:
 441 00f4 4F93      		push r20
 442               	.LCFI14:
 443 00f6 5F93      		push r21
 444               	.LCFI15:
 445 00f8 8F93      		push r24
 446               	.LCFI16:
 447 00fa 9F93      		push r25
 448               	.LCFI17:
 449 00fc AF93      		push r26
 450               	.LCFI18:
 451 00fe BF93      		push r27
 452               	.LCFI19:
 453 0100 EF93      		push r30
 454               	.LCFI20:
 455 0102 FF93      		push r31
 456               	.LCFI21:
 457               	/* prologue: Signal */
 458               	/* frame size = 0 */
 459               	/* stack size = 13 */
 460               	.L__stack_usage = 13
 178:dimmer.c      **** 	count--;
 461               		.loc 1 178 0
 462 0104 8091 0000 		lds r24,count
 463 0108 9091 0000 		lds r25,count+1
 464 010c 0197      		sbiw r24,1
 465 010e 9093 0000 		sts count+1,r25
 466 0112 8093 0000 		sts count,r24
 467               	.LVL22:
 468 0116 E0E0      		ldi r30,lo8(dimmerMasks)
 469 0118 F0E0      		ldi r31,hi8(dimmerMasks)
 470 011a 80E0      		ldi r24,0
 471 011c 90E0      		ldi r25,0
 472               	.LVL23:
 473               	.L34:
 474               	.LBB28:
 179:dimmer.c      **** 
 180:dimmer.c      **** 	for(uint8_t i = 0; i < DIMMER_COUNT; i++) {
 181:dimmer.c      **** 		if(dimmerLevels[i] >= count && dimmerLevels[i] != 0) {
 475               		.loc 1 181 0
 476 011e DC01      		movw r26,r24
 477 0120 A050      		subi r26,lo8(-(dimmerLevels))
 478 0122 B040      		sbci r27,hi8(-(dimmerLevels))
 479 0124 4C91      		ld r20,X
 480 0126 2091 0000 		lds r18,count
 481 012a 3091 0000 		lds r19,count+1
 482 012e 50E0      		ldi r21,0
 483 0130 4217      		cp r20,r18
 484 0132 5307      		cpc r21,r19
 485 0134 00F0      		brlo .L32
 486               		.loc 1 181 0 is_stmt 0 discriminator 1
 487 0136 2C91      		ld r18,X
 488 0138 2223      		tst r18
 489 013a 01F0      		breq .L32
 182:dimmer.c      **** 			if(i > 6) {
 183:dimmer.c      **** 				PORTB |= dimmerMasks[i];
 184:dimmer.c      **** 			} else {
 185:dimmer.c      **** 				PORTD |= dimmerMasks[i];
 490               		.loc 1 185 0 is_stmt 1
 491 013c 2BB1      		in r18,0xb
 492 013e 3081      		ld r19,Z
 493 0140 232B      		or r18,r19
 494 0142 00C0      		rjmp .L39
 495               	.L32:
 186:dimmer.c      **** 			}
 187:dimmer.c      **** 		} else if(dimmerLevels[i] >= (count + 1)) {
 496               		.loc 1 187 0
 497 0144 4C91      		ld r20,X
 498 0146 2091 0000 		lds r18,count
 499 014a 3091 0000 		lds r19,count+1
 500 014e 50E0      		ldi r21,0
 501 0150 2F5F      		subi r18,-1
 502 0152 3F4F      		sbci r19,-1
 503 0154 4217      		cp r20,r18
 504 0156 5307      		cpc r21,r19
 505 0158 00F0      		brlo .L33
 188:dimmer.c      **** 			if(i > 6) {
 189:dimmer.c      **** 				PORTB &= ~dimmerMasks[i];
 190:dimmer.c      **** 			} else {
 191:dimmer.c      **** 				PORTD &= ~dimmerMasks[i];
 506               		.loc 1 191 0
 507 015a 3BB1      		in r19,0xb
 508 015c 2081      		ld r18,Z
 509 015e 2095      		com r18
 510 0160 2323      		and r18,r19
 511               	.L39:
 512 0162 2BB9      		out 0xb,r18
 513               	.L33:
 514 0164 0196      		adiw r24,1
 515 0166 3196      		adiw r30,1
 180:dimmer.c      **** 	for(uint8_t i = 0; i < DIMMER_COUNT; i++) {
 516               		.loc 1 180 0
 517 0168 8230      		cpi r24,2
 518 016a 9105      		cpc r25,__zero_reg__
 519 016c 01F4      		brne .L34
 520               	/* epilogue start */
 521               	.LBE28:
 192:dimmer.c      **** 			}
 193:dimmer.c      **** 		}
 194:dimmer.c      **** 	}
 195:dimmer.c      **** }
 522               		.loc 1 195 0
 523 016e FF91      		pop r31
 524 0170 EF91      		pop r30
 525 0172 BF91      		pop r27
 526 0174 AF91      		pop r26
 527 0176 9F91      		pop r25
 528 0178 8F91      		pop r24
 529 017a 5F91      		pop r21
 530 017c 4F91      		pop r20
 531 017e 3F91      		pop r19
 532 0180 2F91      		pop r18
 533 0182 0F90      		pop r0
 534 0184 0FBE      		out __SREG__,r0
 535 0186 0F90      		pop r0
 536 0188 1F90      		pop r1
 537 018a 1895      		reti
 538               	.LFE15:
 540               	.global	__vector_14
 542               	__vector_14:
 543               	.LFB16:
 196:dimmer.c      **** 
 197:dimmer.c      **** //Dimming Interrupt
 198:dimmer.c      **** ISR(TIMER0_COMPA_vect) {
 544               		.loc 1 198 0
 545 018c 1F92      		push r1
 546               	.LCFI22:
 547 018e 0F92      		push r0
 548               	.LCFI23:
 549 0190 0FB6      		in r0,__SREG__
 550 0192 0F92      		push r0
 551 0194 1124      		clr __zero_reg__
 552 0196 8F93      		push r24
 553               	.LCFI24:
 554 0198 9F93      		push r25
 555               	.LCFI25:
 556               	/* prologue: Signal */
 557               	/* frame size = 0 */
 558               	/* stack size = 5 */
 559               	.L__stack_usage = 5
 560               	.LVL24:
 561               	.LBB29:
 199:dimmer.c      **** 
 200:dimmer.c      ****         for(uint8_t i = 0; i < DIMMER_COUNT; i++) {
 201:dimmer.c      ****                 if(dimmerRequests[i] > dimmerLevels[i]) {
 562               		.loc 1 201 0
 563 019a 9091 0000 		lds r25,dimmerRequests
 564 019e 8091 0000 		lds r24,dimmerLevels
 565 01a2 8917      		cp r24,r25
 566 01a4 00F0      		brlo .L41
 202:dimmer.c      ****                         dimmerLevels[i]++;
 203:dimmer.c      ****                 } else if(dimmerRequests[i] < dimmerLevels[i]) {
 567               		.loc 1 203 0
 568 01a6 9091 0000 		lds r25,dimmerRequests
 569 01aa 8091 0000 		lds r24,dimmerLevels
 570 01ae 9817      		cp r25,r24
 571 01b0 00F4      		brsh .L42
 204:dimmer.c      ****                         dimmerLevels[i]--;
 572               		.loc 1 204 0
 573 01b2 8091 0000 		lds r24,dimmerLevels
 574 01b6 8150      		subi r24,lo8(-(-1))
 575 01b8 00C0      		rjmp .L45
 576               	.L41:
 202:dimmer.c      ****                         dimmerLevels[i]++;
 577               		.loc 1 202 0
 578 01ba 8091 0000 		lds r24,dimmerLevels
 579 01be 8F5F      		subi r24,lo8(-(1))
 580               	.L45:
 581 01c0 8093 0000 		sts dimmerLevels,r24
 582               	.L42:
 583               	.LVL25:
 201:dimmer.c      ****                 if(dimmerRequests[i] > dimmerLevels[i]) {
 584               		.loc 1 201 0
 585 01c4 9091 0000 		lds r25,dimmerRequests+1
 586 01c8 8091 0000 		lds r24,dimmerLevels+1
 587 01cc 8917      		cp r24,r25
 588 01ce 00F4      		brsh .L43
 202:dimmer.c      ****                         dimmerLevels[i]++;
 589               		.loc 1 202 0
 590 01d0 8091 0000 		lds r24,dimmerLevels+1
 591 01d4 8F5F      		subi r24,lo8(-(1))
 592 01d6 00C0      		rjmp .L46
 593               	.L43:
 203:dimmer.c      ****                 } else if(dimmerRequests[i] < dimmerLevels[i]) {
 594               		.loc 1 203 0
 595 01d8 9091 0000 		lds r25,dimmerRequests+1
 596 01dc 8091 0000 		lds r24,dimmerLevels+1
 597 01e0 9817      		cp r25,r24
 598 01e2 00F4      		brsh .L40
 599               		.loc 1 204 0
 600 01e4 8091 0000 		lds r24,dimmerLevels+1
 601 01e8 8150      		subi r24,lo8(-(-1))
 602               	.L46:
 603 01ea 8093 0000 		sts dimmerLevels+1,r24
 604               	.LVL26:
 605               	.L40:
 606               	/* epilogue start */
 607               	.LBE29:
 205:dimmer.c      ****                 }
 206:dimmer.c      ****         }
 207:dimmer.c      **** 
 208:dimmer.c      **** }
 608               		.loc 1 208 0
 609 01ee 9F91      		pop r25
 610 01f0 8F91      		pop r24
 611 01f2 0F90      		pop r0
 612 01f4 0FBE      		out __SREG__,r0
 613 01f6 0F90      		pop r0
 614 01f8 1F90      		pop r1
 615 01fa 1895      		reti
 616               	.LFE16:
 618               		.comm	count,2,1
 619               	.global	dimmerLevels
 620               		.section .bss
 623               	dimmerLevels:
 624 0000 0000 0000 		.zero	8
 624      0000 0000 
 625               	.global	dimmerRequests
 628               	dimmerRequests:
 629 0008 0000 0000 		.zero	8
 629      0000 0000 
 630               	.global	dimmerMasks
 631               		.data
 634               	dimmerMasks:
 635 0000 01        		.byte	1
 636 0001 02        		.byte	2
 637 0002 08        		.byte	8
 638 0003 10        		.byte	16
 639 0004 20        		.byte	32
 640 0005 40        		.byte	64
 641 0006 80        		.byte	-128
 642 0007 01        		.byte	1
 893               	.Letext0:
 894               		.file 2 "/usr/lib/gcc/avr/4.7.2/../../../avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 dimmer.c
     /tmp/ccRJZMCV.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccRJZMCV.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccRJZMCV.s:4      *ABS*:0000003f __SREG__
     /tmp/ccRJZMCV.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccRJZMCV.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccRJZMCV.s:11     .text:00000000 initIO
     /tmp/ccRJZMCV.s:70     .text:0000003e initDimmers
     /tmp/ccRJZMCV.s:92     .text:0000004e spi_read
     /tmp/ccRJZMCV.s:132    .text.startup:00000000 main
     /tmp/ccRJZMCV.s:623    .bss:00000000 dimmerLevels
     /tmp/ccRJZMCV.s:628    .bss:00000008 dimmerRequests
     /tmp/ccRJZMCV.s:306    .text:0000006c rampToLevel
     /tmp/ccRJZMCV.s:325    .text:00000078 switchToLevel
     /tmp/ccRJZMCV.s:349    .text:0000008c debugLed
     /tmp/ccRJZMCV.s:368    .text:00000096 __vector_1
                            *COM*:00000002 count
     /tmp/ccRJZMCV.s:427    .text:000000e6 __vector_11
     /tmp/ccRJZMCV.s:634    .data:00000000 dimmerMasks
     /tmp/ccRJZMCV.s:542    .text:0000018c __vector_14

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
