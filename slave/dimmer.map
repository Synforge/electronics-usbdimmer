Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o (exit)
/usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                              dimmer.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

dimmers             0xa               dimmer.o
count               0x2               dimmer.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
LOAD dimmer.o
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x2cc
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000034                . = ALIGN (0x2)
                0x0000000000000034                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000034        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000034                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000034                __ctors_start = .
 *(.ctors)
                0x0000000000000034                __ctors_end = .
                0x0000000000000034                __dtors_start = .
 *(.dtors)
                0x0000000000000034                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000034        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x0000000000000034                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000034        0xc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000040       0x10 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000040                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000050        0x4 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 *(.init9)
 *(.text)
 .text          0x0000000000000054        0x2 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
                0x0000000000000054                __vector_22
                0x0000000000000054                __vector_24
                0x0000000000000054                __vector_12
                0x0000000000000054                __bad_interrupt
                0x0000000000000054                __vector_6
                0x0000000000000054                __vector_3
                0x0000000000000054                __vector_23
                0x0000000000000054                __vector_25
                0x0000000000000054                __vector_13
                0x0000000000000054                __vector_17
                0x0000000000000054                __vector_19
                0x0000000000000054                __vector_7
                0x0000000000000054                __vector_5
                0x0000000000000054                __vector_4
                0x0000000000000054                __vector_9
                0x0000000000000054                __vector_2
                0x0000000000000054                __vector_21
                0x0000000000000054                __vector_15
                0x0000000000000054                __vector_8
                0x0000000000000054                __vector_10
                0x0000000000000054                __vector_16
                0x0000000000000054                __vector_18
                0x0000000000000054                __vector_20
 .text          0x0000000000000056      0x218 dimmer.o
                0x0000000000000056                initIO
                0x000000000000008e                initDimmers
                0x00000000000000c6                rampToLevel
                0x00000000000000d6                switchToLevel
                0x00000000000000e8                debugLed
                0x00000000000000f2                __vector_1
                0x0000000000000142                __vector_11
                0x00000000000001fe                __vector_14
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text          0x000000000000026e        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                0x000000000000026e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000026e       0x5a dimmer.o
                0x000000000000026e                main
 .text.libgcc.mul
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000002c8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000002c8        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                0x00000000000002c8                exit
                0x00000000000002c8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000002c8        0x4 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000002cc                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000002cc
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 .data          0x0000000000800100        0x0 dimmer.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100        0xc
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
 .bss           0x0000000000800100        0x0 dimmer.o
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800100        0xc dimmer.o
                0x0000000000800100                dimmers
                0x000000000080010a                count
                0x000000000080010c                PROVIDE (__bss_end, .)
                0x00000000000002cc                __data_load_start = LOADADDR (.data)
                0x00000000000002cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080010c        0x0
                0x000000000080010c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080010c                PROVIDE (__noinit_end, .)
                0x000000000080010c                _end = .
                0x000000000080010c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x6cc
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o

.stabstr        0x0000000000000000       0x54
 *(.stabstr)
 .stabstr       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 dimmer.o
                                         0x12 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 dimmer.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x3d0
 *(.debug_info)
 .debug_info    0x0000000000000000      0x3d0 dimmer.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x232
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x232 dimmer.o

.debug_line     0x0000000000000000      0x135
 *(.debug_line)
 .debug_line    0x0000000000000000      0x135 dimmer.o

.debug_frame    0x0000000000000000      0x134
 *(.debug_frame)
 .debug_frame   0x0000000000000000      0x134 dimmer.o

.debug_str      0x0000000000000000      0x1a8
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1a8 dimmer.o
                                        0x1e1 (size before relaxing)

.debug_loc      0x0000000000000000      0x2a4
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x2a4 dimmer.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(dimmer.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0x30
 .debug_ranges  0x0000000000000000       0x30 dimmer.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__bss_end                                         /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_clear_bss.o)
                                                  dimmer.o
__heap_end                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__init                                            /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__stack                                           /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_1                                        dimmer.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_10                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_11                                       dimmer.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_12                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_13                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_14                                       dimmer.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_15                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_16                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_17                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_18                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_19                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_2                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_20                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_21                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_22                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_23                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_24                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_25                                       /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_3                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_4                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_5                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_6                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_7                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_8                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_9                                        /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vector_default                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
__vectors                                         /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
_exit                                             /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
count                                             dimmer.o
debugLed                                          dimmer.o
dimmers                                           dimmer.o
exit                                              /usr/lib/gcc/avr/4.7.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
initDimmers                                       dimmer.o
initIO                                            dimmer.o
main                                              dimmer.o
                                                  /usr/lib/gcc/avr/4.7.2/../../../avr/lib/avr4/crtm48.o
rampToLevel                                       dimmer.o
switchToLevel                                     dimmer.o
